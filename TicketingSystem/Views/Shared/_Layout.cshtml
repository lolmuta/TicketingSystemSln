<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - TicketingSystem</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/TicketingSystem.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">TicketingSystem</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1" id="btnLink">
 @*                       <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>*@
                    </ul>
                </div>
                <div id="userInfo">
                    [登入者資訊]
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2024 - TicketingSystem - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/axios.min.js" asp-append-version="true"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
    <script>
        window.websettings = window.websettings || {}; // 确保对象已经存在
        window.websettings.host = '@(Context.Request.Scheme)://@(Context.Request.Host)';
        window.websettings.token = window.sessionStorage.getItem("token");
        window.websettings.userInfo = {}
        /**
         * 檢查是否登入
         */
        async function checkLogin() {
            try {
                const token = window.websettings.token;
                const url = `${window.websettings.host}/api/auth/checkLogin`;

                const response = await axios.get(url, {
                    headers: {
                        Authorization: `Bearer ${token}`
                    },
                    params: {
                    }
                });

                const data = response.data;
                if (!data.success) {
                    alert(data.message);
                    返回登入頁面();
                    return false;
                }
                return true;
            } catch (e) {
                alert(e);
                返回登入頁面();
                return false;
            }
        }
        function 返回登入頁面() {
            const url = `${window.websettings.host}/auth/index`;
            window.location.href = url;
        }
        $(document).ready(async function() {
            if (!(await checkLogin())) return;

            const token = window.websettings.token;
            const url = `${window.websettings.host}/api/auth/getUserInfo`;
            const response = await axios.get(url, {
                headers: {
                    Authorization: `Bearer ${token}`
                },
                params: {
                }
            });
            const data = response.data;
            if (!data.success) {
                alert(data.message);
                返回登入頁面();
                return;
            }
            debugger;
            window.websettings.userInfo = data.message;
            $("#userInfo").text(window.websettings.userInfo.name);
        });
        /**
         * 通用 apiGet
         */
        async function apiGet(apiControllerName, apiControllerFunctionName, para) {
            const token = window.websettings.token;
            const url = `${window.websettings.host}/api/${apiControllerName}/${apiControllerFunctionName}`;
            const response = await axios.get(url, {
                headers: {
                    Authorization: `Bearer ${token}`
                },
                params: para
            });
            const data = response.data;
            return data;
        }
        /**
         * 通用 apiPost
         */
        async function apiPost(apiControllerName, apiControllerFunctionName, para) {
            const token = window.websettings.token;
            const url = `${window.websettings.host}/api/${apiControllerName}/${apiControllerFunctionName}`;
            const response = await axios.post(url, para, {
                headers: {
                    Authorization: `Bearer ${token}`
                }
            });
            const data = response.data;
            return data;
        }
        /**
         * 通用填入下拉選單
         */
        function ddlIn(selectId, optionsArray, addEmptyOption) {
            var $select = $(selectId);

            $select.empty();
            // 如果需要添加空白選項，則先添加它
            if (addEmptyOption) {
                $select.append($('<option>', {
                    value: '',
                    text: ''
                }));
            }

            // 遍歷 optionsArray 並將每個選項加入下拉選單
            $.each(optionsArray, function(index, option) {
                $select.append($('<option>', {
                    value: option.value,
                    text: option.text
                }));
            });
        }
        function addLink(btnText, functionName) {
            const $btnLink = $("#btnLink");
            const $newLink = $(`
                        <li class="nav-item">
                            <button type = "button" class = "btn btn-light" onclick="${functionName}">${btnText}</button>
                        </li>
                    `);
            $btnLink.append($newLink);
        }
    </script>

</body>
</html>
